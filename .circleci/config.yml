version: 2.1

# orbs:
  # slack: circleci/slack@4.12.1

commands:
  install_awscli:
    description: Install AWS CLI V2
    steps:
      - run:
          name: Install AWS CLI V2
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install

  install_ansible:
    description: Install Ansible V2
    steps:
      - run:
          name: Install Ansible V2
          command: |
          sudo apt update
          sudo apt install software-properties-common
          sudo add-apt-repository --yes --update ppa:ansible/ansible
          sudo apt install ansible

  # notify_on_failure:
  #   steps:
  #     - slack/notify:
  #         event: fail
  #         channel: udacity-project
  #         template: basic_fail_1

jobs:
  build-frontend:
      docker:
        - image: cimg/node:13.8.0
      steps:
        - checkout
        - restore_cache:
            keys: [frontend-deps]
        - run:
            name: Build front-end
            command: |
              cd frontend
              npm install
              npm run build
              
        - save_cache:
            paths: [frontend/node_modules]
            key: frontend-deps
        # - notify_on_failure

  build-backend:
    docker:
      - image: cimg/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-deps]
      - run:
          name: Back-end build
          command: |
            cd backend
            npm install
            npm run build
            
      - save_cache:
          paths: [backend/node_modules]
          key: backend-deps
      # - notify_on_failure

  test-frontend:
    docker:
      - image: cimg/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-deps]
      - run:
          name: Front-end Unit Test
          command: |
            cd frontend
            npm install
            npm run test
      # - notify_on_failure
                
  test-backend:
    docker:
      - image: cimg/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-deps]
      - run:
          name: Back-end Unit Test
          command: |
            cd backend
            npm install
            npm run test
      # - notify_on_failure

  scan-frontend:
    docker:
      - image: cimg/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-deps]
      - run:
          name: Front-end Scan
          command: |
            cd frontend
            npm install
            npm audit fix --audit-level=critical --force
            npm audit fix --audit-level=critical --force
            npm audit --audit-level=critical
      # - notify_on_failure

  scan-backend:
    docker:
      - image: cimg/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-deps]
      - run:
          name: Back-end Scan
          command: |
            cd backend
            npm install
            npm audit fix --audit-level=critical --force
            npm audit fix --audit-level=critical --force
            npm audit --audit-level=critical
      # - notify_on_failure

  # notify_on_success:
  #   docker:
  #     - image: cimg/base:stable
  #   steps:
  #     - slack/notify:
  #         event: pass
  #         channel: udacity-project
  #         template: success_tagged_deployment_1

workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires: [build-frontend]
      - test-backend:
          requires: [build-backend] 
      - scan-backend:
          requires: [build-backend]
      - scan-frontend:
          requires: [build-frontend] 
      # - notify_on_success:
      #     requires:
      #       - test-frontend
      #       - test-backend
      #       - scan-frontend 
      #       - scan-backend   
          